# Generated by Django 5.2 on 2025-05-04 05:13

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdministrativeService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('SCOLARITE', 'Scolarité'), ('FINANCIER', 'Financier'), ('AUTRE', 'Autre')], max_length=20)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='CategoryResource',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('capacity', models.IntegerField()),
                ('building', models.CharField(max_length=50)),
                ('floor', models.IntegerField()),
                ('room_number', models.CharField(max_length=10)),
                ('has_projector', models.BooleanField(default=False)),
                ('has_computers', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Salle de classe',
                'verbose_name_plural': 'Salles de classe',
            },
        ),
        migrations.CreateModel(
            name='Computer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_number', models.CharField(max_length=50, unique=True)),
                ('brand', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('specs', models.TextField()),
                ('purchase_date', models.DateField()),
                ('status', models.CharField(choices=[('available', 'Disponible'), ('reserved', 'Réservé'), ('maintenance', 'En maintenance')], default='available', max_length=20)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Ordinateur',
                'verbose_name_plural': 'Ordinateurs',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='MaterielPedagogique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('categorie', models.CharField(max_length=50)),
                ('disponible', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PersonneBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('matricule', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phoneNumber', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Projector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_number', models.CharField(max_length=50, unique=True)),
                ('brand', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('resolution', models.CharField(max_length=20)),
                ('purchase_date', models.DateField()),
                ('status', models.CharField(choices=[('available', 'Disponible'), ('reserved', 'Réservé'), ('maintenance', 'En maintenance')], default='available', max_length=20)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Vidéo Projecteur',
                'verbose_name_plural': 'Vidéo Projecteurs',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
            },
        ),
        migrations.CreateModel(
            name='Ordinateur',
            fields=[
                ('materielpedagogique_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ProjectShedulingApp.materielpedagogique')),
                ('adresse_mac', models.CharField(max_length=17, unique=True)),
                ('processeur', models.CharField(max_length=50)),
                ('ram', models.IntegerField()),
                ('stockage', models.IntegerField()),
            ],
            bases=('ProjectShedulingApp.materielpedagogique',),
        ),
        migrations.CreateModel(
            name='SalleDeClasse',
            fields=[
                ('materielpedagogique_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ProjectShedulingApp.materielpedagogique')),
                ('capacite', models.IntegerField()),
                ('numero_salle', models.CharField(max_length=10, unique=True)),
            ],
            bases=('ProjectShedulingApp.materielpedagogique',),
        ),
        migrations.CreateModel(
            name='VideoProjecteur',
            fields=[
                ('materielpedagogique_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ProjectShedulingApp.materielpedagogique')),
                ('resolution', models.CharField(max_length=20)),
                ('connectivite', models.CharField(max_length=50)),
                ('luminosite', models.IntegerField()),
            ],
            bases=('ProjectShedulingApp.materielpedagogique',),
        ),
        migrations.CreateModel(
            name='MembreAdmin',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('RESPONSABLE', 'Responsable'), ('AGENT', 'Agent'), ('AUTRE', 'Autre')], max_length=20)),
                ('poste', models.CharField(max_length=100)),
                ('administrative_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membres', to='ProjectShedulingApp.administrativeservice')),
            ],
        ),
        migrations.CreateModel(
            name='Requete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('EN_ATTENTE', 'En attente'), ('TRAITEE', 'Traitée'), ('REFUSEE', 'Refusée')], max_length=20)),
                ('administrative_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requetes', to='ProjectShedulingApp.administrativeservice')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('student', 'Étudiant'), ('teacher', 'Enseignant'), ('admin', 'Administrateur')], default='student', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricule', models.CharField(default='00000', max_length=50, unique=True)),
                ('phone_number', models.CharField(default='0000000', max_length=20)),
                ('password', models.CharField(default='nothing', max_length=128, verbose_name='password')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teachers', to='ProjectShedulingApp.department')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(default='nothing@gmail.com', max_length=255, unique=True, verbose_name='Adresse email')),
                ('matricule', models.CharField(default='00000', max_length=50, unique=True)),
                ('phone_number', models.CharField(default='0000000', max_length=20)),
                ('niveau', models.CharField(default='0', max_length=50)),
                ('password', models.CharField(default='nothing', max_length=128, verbose_name='password')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('date_debut', models.DateTimeField()),
                ('date_fin', models.DateTimeField()),
                ('status', models.CharField(choices=[('EN_ATTENTE', 'En attente'), ('VALIDEE', 'Validée'), ('REFUSEE', 'Refusée'), ('ANNULEE', 'Annulée')], default='EN_ATTENTE', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
